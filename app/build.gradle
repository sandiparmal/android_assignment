apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0

        def runTasks = gradle.startParameter.taskNames

        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1;
        }

        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_CODE'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_CODE'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "infosys.com.androidassignment"
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionCode versionNumber
            versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild}) Release"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }


        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${versionName}-Android_Assignment.apk"
            }
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig getSigningConfig()

        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig getSigningConfig()

        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    //Retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    //RxAndroid
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2Version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.rxJavaAdapter"
    //Gson
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"

    // card view
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    // dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    // Testing-only dependencies
    androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion";
    androidTestCompile "com.android.support.test:rules:$rootProject.rulesVersion";

    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'
    // Force usage of dependencies in the test app, since it is internally used by the runner module.
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion";
    androidTestCompile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion";

    // UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
}
